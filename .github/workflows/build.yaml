name: Build

on:
  push:

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version-file: 'package.json'
        cache: 'yarn'
    - run: yarn install --frozen-lockfile
    - run: yarn lint

  test:
    strategy:
      matrix:
        os: [ubuntu, macos, windows]
    name: Run test
    runs-on: ${{ matrix.os }}-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version-file: 'package.json'
        cache: 'yarn'
    - run: yarn install --frozen-lockfile
    - run: yarn build
    - name: install webext-agent locally
      run: |
        yarn pack --filename webext-agent-latest.tgz
        npm install --global webext-agent-latest.tgz
    - run: webext-agent install
    - run: xvfb-run --auto-servernum --server-args="-screen 0 1280x960x24" -- yarn test
      if: runner.os == 'Linux'
    - run: yarn test
      if: runner.os != 'Linux'

  publish:
    name: Publish to NPM
    if: github.ref == 'refs/heads/master'
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
    - uses: google-github-actions/release-please-action@v3
      id: release
      with:
        command: manifest
    - uses: actions/checkout@v3
      if: ${{ steps.release.outputs.release_created }}
    - uses: actions/setup-node@v3
      with:
        node-version-file: 'package.json'
        cache: 'yarn'
        registry-url: 'https://registry.npmjs.org'
      if: ${{ steps.release.outputs.release_created }}
    - run: yarn install --frozen-lockfile
      if: ${{ steps.release.outputs.release_created }}
    - run: yarn build
      if: ${{ steps.release.outputs.release_created }}
    - run: yarn publish --new-version $(jq -r .version <package.json)
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      if: ${{ steps.release.outputs.release_created }}
